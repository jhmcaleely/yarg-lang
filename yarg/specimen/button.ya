import("gpio");

var any[NUM_BANK0_GPIOS] response_leds;
var bool[NUM_BANK0_GPIOS] states;

var button = make_channel();

fun gpio_callback(num, events) {
    share(button, num);
}

fun button_led(led_io, button_io) {
    
    gpio_init(led_io);
    gpio_set_direction(led_io, GPIO_OUT);

    response_leds[button_io] = led_io;

    gpio_init(button_io);
    gpio_set_irq_enabled_with_callback(button_io, GPIO_IRQ_EDGE_FALL | GPIO_IRQ_EDGE_RISE, true, gpio_callback);

}

const gpio_button1 = 0d2;
const gpio_led1 = 0d3;

const gpio_button2 = 0d4;
const gpio_led2 = 0d5;

button_led(gpio_led1, gpio_button1);
button_led(gpio_led2, gpio_button2);

while (true) {
    var pressed = receive(button);
    states[pressed] = !states[pressed];
    gpio_put(response_leds[pressed], states[pressed]);
}
