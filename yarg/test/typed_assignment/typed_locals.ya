var any test;
var int32 counter = 6;
var bool isTrue = true;
var mfloat64 aFloat = 0.0;
var uint32 aUint = 0xFFFFFFFF;
var string aString = "Hello, World!";
var any[] aArray = new(any[10]);

var asBefore;
{
    var any test = false;
    var int32 counter = 7;
    var bool isTrue = false;
    var mfloat64 aFloat = 1.2;
    var uint32 aUint = 0xdede;
    var string aString = "Hello, Scope!";
    var any[11] aArray;
    var asBefore = 10;

    print counter;      // expect: 7
    print isTrue;       // expect: false
    print aFloat;       // expect: 1.20000
    print aUint;        // expect: 57054
    print aString;      // expect: Hello, Scope!
    print asBefore;     // expect: 10
    print test;         // expect: false
    print aArray;       // expect: Type:any[11]:[nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil]
}

print isTrue; // expect: true
print aFloat; // expect: 0.00000
print aUint;  // expect: 4294967295
print aString; // expect: Hello, World!
print asBefore; // expect: nil
print test;     // expect: nil
print aArray; // expect: Type:any[10]:[nil, nil, nil, nil, nil, nil, nil, nil, nil, nil]

test = 10;
asBefore = test;
print asBefore; // expect: 10
asBefore = "test";
print asBefore; // expect: test

{
    var int32 counter = 8;
    print counter; // expect: 8
    counter = true;    // expect runtime error: Cannot set local variable to incompatible type.
}